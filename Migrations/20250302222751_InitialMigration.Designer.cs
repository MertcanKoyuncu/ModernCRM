// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ModernCRM.Data;

#nullable disable

namespace ModernCRM.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250302222751_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ModernCRM.Models.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Company")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("LastContactDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("varchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "İstanbul",
                            Company = "ABC Ltd",
                            CreatedAt = new DateTime(2025, 3, 3, 1, 27, 50, 651, DateTimeKind.Local).AddTicks(8615),
                            Email = "ali@example.com",
                            Name = "Ali Yılmaz",
                            Phone = "555-123-4567"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Ankara",
                            Company = "XYZ A.Ş.",
                            CreatedAt = new DateTime(2025, 3, 3, 1, 27, 50, 653, DateTimeKind.Local).AddTicks(3848),
                            Email = "ayse@example.com",
                            Name = "Ayşe Demir",
                            Phone = "555-987-6543"
                        });
                });

            modelBuilder.Entity("ModernCRM.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Category")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("PaymentMethod")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Transactions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amount = 1500.00m,
                            Category = "Hizmet",
                            CustomerId = 1,
                            Date = new DateTime(2025, 3, 3, 1, 27, 50, 653, DateTimeKind.Local).AddTicks(8866),
                            Description = "Danışmanlık ücreti",
                            PaymentMethod = "Banka Transferi",
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            Amount = 750.50m,
                            Category = "Ürün",
                            CustomerId = 2,
                            Date = new DateTime(2025, 3, 3, 1, 27, 50, 654, DateTimeKind.Local).AddTicks(379),
                            Description = "Yazılım satışı",
                            PaymentMethod = "Kredi Kartı",
                            Type = 0
                        },
                        new
                        {
                            Id = 3,
                            Amount = 250.00m,
                            Category = "Ofis",
                            Date = new DateTime(2025, 3, 3, 1, 27, 50, 654, DateTimeKind.Local).AddTicks(384),
                            Description = "Kira gideri",
                            PaymentMethod = "Banka Transferi",
                            Type = 1
                        });
                });

            modelBuilder.Entity("ModernCRM.Models.Transaction", b =>
                {
                    b.HasOne("ModernCRM.Models.Customer", "Customer")
                        .WithMany("Transactions")
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ModernCRM.Models.Customer", b =>
                {
                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
